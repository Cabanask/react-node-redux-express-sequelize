import express from 'express';
import morgan from'morgan';
import path from'path';
import session from'cookie-session'; // Charge le middleware de sessions
import Sequelize from'sequelize';
import {sequelize} from'./configServer';
const app = express();
import bodyParser from 'body-parser'; // Charge le middleware de gestion des paramÃ¨tres
import * as API_USERS from './Users/apiUser';
import * as API_DYNAMICS_ROUTER from './DynamicsRouter/apiDynamicsRouter';
import * as API_TEMPLATES from './DynamicsRouter/apiTemplate';
import * as API_LEVEL_USERS from './Users/apiLevelUser';
import * as API_IMAGES from './Images/apiImages';
import * as API_PRODUCTS from './Products/apiProduct';
import * as API_CATEGORIES_PRODUCT from './Categories/apiCategoriesProduct';
import * as API_PRODUCT_CATEGORY from './Categories/apiProductCategory';
const urlencodedParser = bodyParser.urlencoded({ extended: false });
// Serve static assets
app.use(express.static(path.resolve(__dirname, '..', 'build')));
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json())
/* Gestion des routes en-dessous */


/*USERS*/
app.get(API_USERS.GET_ALL_USER_URL,API_USERS.GET_ALL_USER_ACTION);
app.post(API_USERS.ADD_USER_URL,API_USERS.ADD_USER_ACTION);
app.get(API_USERS.DEL_USER_BYID_URL,API_USERS.DEL_USER_BYID_ACTION);
app.put(API_USERS.UPDATE_USER_BYID_URL,API_USERS.UPDATE_USER_BYID_ACTION);

/*LEVEL USERS*/
app.get(API_LEVEL_USERS.GET_ALL_LEVEL_USER_URL,API_LEVEL_USERS.GET_ALL_LEVEL_USER_ACTION);
app.post(API_LEVEL_USERS.ADD_LEVEL_USER_URL,API_LEVEL_USERS.ADD_LEVEL_USER_ACTION);
app.get(API_LEVEL_USERS.DEL_LEVEL_USER_BYID_URL,API_LEVEL_USERS.DEL_LEVEL_USER_BYID_ACTION);
app.get(API_LEVEL_USERS.UPDATE_LEVEL_USER_BYID_URL,API_LEVEL_USERS.UPDATE_LEVEL_USER_BYID_ACTION);

/*DynamicsRouter*/
app.get(API_DYNAMICS_ROUTER.GET_DYNAMICS_ROUTE_URL , API_DYNAMICS_ROUTER.GET_DYNAMICS_ROUTE_ACTION);
app.post(API_DYNAMICS_ROUTER.ADD_DYNAMICS_ROUTE_URL , API_DYNAMICS_ROUTER.ADD_DYNAMICS_ROUTE_ACTION);
app.get(API_DYNAMICS_ROUTER.DEL_DYNAMICS_ROUTE_URL , API_DYNAMICS_ROUTER.DEL_DYNAMICS_ROUTE_ACTION);
app.put(API_DYNAMICS_ROUTER.UPDATE_DYNAMICS_ROUTE_URL,API_DYNAMICS_ROUTER.UPDATE_DYNAMICS_ROUTE_ACTION);

/*TEMPLATE*/
app.get(API_TEMPLATES.GET_TEMPLATE_URL , API_TEMPLATES.GET_TEMPLATE_ACTION);
app.post(API_TEMPLATES.ADD_TEMPLATE_URL , API_TEMPLATES.ADD_TEMPLATE_ACTION);
app.get(API_TEMPLATES.DEL_TEMPLATE_URL , API_TEMPLATES.DEL_TEMPLATE_ACTION);
app.put(API_TEMPLATES.UPDATE_TEMPLATE_BYID_URL,API_TEMPLATES.UPDATE_TEMPLATE_BYID_ACTION);

/*IMAGES*/
app.get(API_IMAGES.GET_IMAGES_URL , API_IMAGES.GET_IMAGES_ACTION)
app.post(API_IMAGES.ADD_IMAGES_URL , API_IMAGES.ADD_IMAGES_ACTION);
app.get(API_IMAGES.DEL_IMAGES_URL , API_IMAGES.DEL_IMAGES_ACTION);
app.put(API_IMAGES.UPDATE_IMAGES_BYID_URL,API_IMAGES.UPDATE_IMAGES_BYID_ACTION);

/*PRODUCT */
app.get(API_PRODUCTS.GET_PRODUCT_URL , API_PRODUCTS.GET_PRODUCT_ACTION)
app.post(API_PRODUCTS.ADD_PRODUCT_URL , API_PRODUCTS.ADD_PRODUCT_ACTION);
app.get(API_PRODUCTS.DEL_PRODUCT_URL , API_PRODUCTS.DEL_PRODUCT_ACTION);
app.put(API_PRODUCTS.UPDATE_PRODUCT_BYID_URL,API_PRODUCTS.UPDATE_PRODUCT_BYID_ACTION);

/*PRODUCT CATEGORIES*/
app.get(API_CATEGORIES_PRODUCT.GET_CATEGORIES_PRODUCT_URL , API_CATEGORIES_PRODUCT.GET_CATEGORIES_PRODUCT_ACTION)
app.post(API_CATEGORIES_PRODUCT.ADD_CATEGORIES_PRODUCT_URL , API_CATEGORIES_PRODUCT.ADD_CATEGORIES_PRODUCT_ACTION);
app.get(API_CATEGORIES_PRODUCT.DEL_CATEGORIES_PRODUCT_URL , API_CATEGORIES_PRODUCT.DEL_CATEGORIES_PRODUCT_ACTION);
app.put(API_CATEGORIES_PRODUCT.UPDATE_CATEGORIES_PRODUCT_BYID_URL,API_CATEGORIES_PRODUCT.UPDATE_CATEGORIES_PRODUCT_BYID_ACTION);

// Always return the main index.html, so react-router render the route in the client
app.get('*', (req, res) => {
  res.sendFile(path.resolve(__dirname, '..', 'build', 'index.html'));
});
module.exports = app;